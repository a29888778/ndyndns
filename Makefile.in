#CC = gcc -Wall -Wpointer-arith -Wstrict-prototypes -pedantic
CC = @CC@
VERSION = @VERSION@
CFLAGS = @CFLAGS@ -Wall -Wpointer-arith -Wstrict-prototypes -pedantic
PLATFORM = @PLATFORM@
dnsinc = -lnss_dns
objects = log.o nstrl.o util.o chroot.o pidfile.o signals.o strlist.o $(PLATFORM).o cfg.o ndyndns.o

all: ndyndns

ndyndns : $(objects)
	$(CC) $(LDFLAGS) $(dnsinc) `curl-config --libs --cflags` -o ndyndns $(objects)

ndyndns.o : log.h nstrl.h util.h chroot.h pidfile.h signals.h strlist.h $(PLATFORM).h cfg.h
	$(CC) $(CFLAGS) -c -o $@ ndyndns.c

linux.o: log.h
bsd.o: log.h
cfg.o: log.h util.h
chroot.o: log.h
pidfile.o: log.h
signals.o: log.h
strlist.o:
nstrl.o:
log.o :

install: ndyndns
	-install -s -m 755 ndyndns /usr/local/sbin/ndyndns
	-install -m 644 ndyndns.1.gz /usr/local/man/man1/ndyndns.1.gz
	-install -m 644 ndyndns.conf.5.gz /usr/local/man/man5/ndyndns.conf.5.gz
tags:
	-ctags -f tags *.[ch]
	-cscope -b
clean:
	-rm -f *.o ndyndns
distclean:
	-rm -f *.o ndyndns tags cscope.out config.h config.log config.status configure Makefile
	-rm -Rf autom4te.cache

